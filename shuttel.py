"""
Dit script is bedoeld om automatisch je ritten in Shuttel te categoriseren als dienstreis of woon-werkverkeer.
Je roept het aan met drie argumenten, namelijk je gebruikersnaam, wachtwoord en standplaats.
Als je op een dag naar je standplaats reist worden alle ritten van die dag gecategoriseerd als woon-werkverkeer.
Als je op een dag niet naar je standplaats reist worden alle ritten van die dag gecategoriseerd als dienstreis.
Die regels zijn natuurlijk aan te passen in de code als je situatie anders is.
"""
from collections import defaultdict
from datetime import datetime, timedelta
import sys

# We use the requests library that happens to be included in pip to avoid installing additional dependencies
import pip._vendor.requests as requests


def monday_sunday_range(year):
    """
    Generator that loops over all days in a year, and yields weeks ranging from Monday to Sunday.
    """
    # Get the first day of the year
    current_date = datetime(year, 1, 1)

    # Get the first Monday of the year
    while current_date.weekday() != 0:
        current_date += timedelta(days=1)

    # Loop over all days in the year
    while current_date.year == year:
        yield current_date, current_date + timedelta(days=6)
        current_date += timedelta(days=7)


if __name__ == '__main__':
    username, password, standplaats = sys.argv[1:]

    session = requests.session()
    session.headers.update({
        "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:129.0) Gecko/20100101 Firefox/129.0",
        "Accept": "application/json; api-version=3",
        "Accept-Encoding": "gzip, deflate, br, zstd",
        "Accept-Language": "en",
        "Connection": "keep-alive",
        "content-type": "application/json",
        "Host": "mijn.shuttelportal.nl",
        "Origin": "https://interface.shuttelportal.nl",
        "Referer": "https://interface.shuttelportal.nl/",
        "Sec-Fetch-Dest": "empty",
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Site": "same-site",
        "user-selected-language": "en",
    })

    login_url = "https://mijn.shuttelportal.nl/graphql?operationName=login"
    token_response = session.post(login_url,
                                  json={"operationName": "login",
                                        "variables": {"email": username, "password": password},
                                        "query": "mutation login($email: String!, $password: String!, $otpToken: String) "
                                                 "{\n  login(input: {email: $email, password: $password, otpToken: "
                                                 "$otpToken}) {\n    result {\n      success\n      error\n     "
                                                 " __typename\n    }\n    hasOtpConfigured\n    otpRequired\n    "
                                                 "passwordResetRequired\n    tokens {\n      accessToken\n      "
                                                 "resetToken\n      __typename\n    }\n    __typename\n  }\n}"})
    token = token_response.json()["data"]["login"]["tokens"]["accessToken"]

    session.headers.update({
        "authorization": f"Bearer {token}"
    })

    # Get our user ID
    user_info_url = "https://mijn.shuttelportal.nl/graphql?operationName=getUserInformation"
    user_info_response = session.post(user_info_url,
                                      json={'operationName': 'getUserInformation', 'variables': {},
                                            'query': 'query getUserInformation {\n  me {\n    id\n    becameEmployee\n    profile {\n      avatar\n      employeeNumber\n      firstName\n      infix\n      initials\n      lastName\n      email\n      phoneNumber\n      usesNewInterface\n      dateOfBirth\n      preferredTravelPurpose\n      defaultMobilityCardTransactionTravelPurpose\n      defaultMobilityCardWeekendTransactionTravelPurpose\n      homeAddress {\n        city\n        street\n        streetNumber\n        streetNumberSuffix\n        zipcode\n        employeeCountryIsoCode {\n          humanized\n          value\n          __typename\n        }\n        __typename\n      }\n      workAddress {\n        city\n        street\n        streetNumber\n        streetNumberSuffix\n        zipcode\n        employeeCountryIsoCode {\n          humanized\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}'}
                                      )

    user_id = user_info_response.json()["data"]["me"]["id"]
    print(f"Logged in as {user_id}")

    trips_url = 'https://mijn.shuttelportal.nl/graphql?operationName=getMobilityEventsCalendarList'
    date_is_dienstreis = defaultdict(lambda: True)

    current_year = datetime.now().year
    for week in monday_sunday_range(current_year):
        # Get from and until date and format as %Y-%m-%d
        date_from, date_until = week
        date_from = date_from.strftime("%Y-%m-%d")
        date_until = date_until.strftime("%Y-%m-%d")
        trips = session.post(trips_url,
                             json={'operationName': 'getMobilityEventsCalendarList',
                                   'variables': {'limit': 999,
                                                 'happenedBetween': {'from': date_from, 'to': date_until}},
                                   'query': 'query getMobilityEventsCalendarList($happenedBetween: DateRangeInput, $limit: Int = 999) {\n  me {\n    id\n    mobilityEvents(happenedBetween: $happenedBetween, limit: $limit) {\n      ...ShowFragment\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ShowFragment on MobilityEvent {\n  id\n  happenedInTheFuture\n  status {\n    value\n    humanized\n    label\n    __typename\n  }\n  employment {\n    budgetGroupName\n    commuteMonthlyKmBudget\n    commuteMonthlyMoneyBudget\n    costCenter\n    department\n    endsOn\n    id\n    main\n    startsOn\n    __typename\n  }\n  happenedAt\n  allowPersonalConsumption\n  actions {\n    editable\n    deletable\n    copyable\n    confirmable\n    unacceptable\n    missingCheckout\n    mergeable\n    viewDetails\n    __typename\n  }\n  financial {\n    fact {\n      exclVat {\n        humanized\n        __typename\n      }\n      inclVat {\n        humanized\n        value\n        __typename\n      }\n      receipt {\n        filename\n        contentType\n        url\n        __typename\n      }\n      direction\n      label\n      vatRate {\n        humanized\n        __typename\n      }\n      __typename\n    }\n    consequences {\n      gross {\n        ...FinancialComponents\n        __typename\n      }\n      net {\n        ...FinancialComponents\n        __typename\n      }\n      fiscal {\n        ...FinancialComponents\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  howMuch {\n    consumption {\n      label\n      humanized\n      amount\n      __typename\n    }\n    co2Emission {\n      label\n      humanized\n      amount\n      __typename\n    }\n    __typename\n  }\n  what {\n    editable\n    humanized\n    modality {\n      id\n      humanizedWithCapital\n      requiresVehicle\n      travelMode\n      kind\n      modalityOwnership {\n        humanized\n        value\n        __typename\n      }\n      requiredPassengerCount\n      clazz\n      __typename\n    }\n    category {\n      id\n      main\n      requiresModality\n      mainCategory {\n        value\n        humanized\n        __typename\n      }\n      subCategory {\n        value\n        humanized\n        __typename\n      }\n      __typename\n    }\n    vehicle {\n      id\n      humanized\n      __typename\n    }\n    sharedRidePassengers\n    reimbursableCategoryMethod {\n      value\n      __typename\n    }\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  where {\n    ... on Route {\n      diverted {\n        label\n        humanized\n        value\n        __typename\n      }\n      nonCombined {\n        label\n        humanized\n        value\n        __typename\n      }\n      from {\n        humanized\n        favoriteId\n        locationId\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      to {\n        humanized\n        favoriteId\n        locationId\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      track {\n        longitude\n        latitude\n        __typename\n      }\n      __typename\n    }\n    ... on RentalLocations {\n      pickup {\n        humanized\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      return {\n        humanized\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on Location {\n      humanized\n      label\n      coordinates {\n        latitude\n        longitude\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  why {\n    editable\n    legs {\n      travelPurpose {\n        humanized\n        __typename\n      }\n      quantity {\n        amount\n        humanized\n        __typename\n      }\n      __typename\n    }\n    travelPurpose {\n      humanized\n      value\n      __typename\n    }\n    personalDistance\n    project {\n      id\n      code\n      humanized\n      __typename\n    }\n    explanation {\n      humanized\n      required {\n        business\n        commute\n        personal\n        __typename\n      }\n      __typename\n    }\n    stateTransitions {\n      rejectedAt\n      rejectReason\n      confirmer\n      __typename\n    }\n    refundedMobilityEventId\n    humanizedRefundedMobilityEvent\n    __typename\n  }\n  when {\n    ... on Timestamp {\n      at\n      editable\n      __typename\n    }\n    ... on Duration {\n      startsAt\n      endsAt\n      editable\n      __typename\n    }\n    __typename\n  }\n  how {\n    humanized\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  isRefund\n  signatures {\n    ...mobilityEventSignature\n    __typename\n  }\n  __typename\n}\n\nfragment FinancialComponents on FinancialComponent {\n  label\n  moneyTransfer {\n    humanized\n    direction\n    __typename\n  }\n  amount {\n    humanized\n    valueInCents\n    __typename\n  }\n  entries {\n    label\n    calculation\n    moneyTransfer {\n      direction\n      humanized\n      __typename\n    }\n    amount {\n      humanized\n      valueInCents\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment mobilityEventSignature on Signature {\n  createdAt\n  id\n  reason\n  signer {\n    profile {\n      email\n      employeeNumber\n      firstName\n      lastName\n      __typename\n    }\n    __typename\n  }\n  __typename\n}'})

        for trip in trips.json()['data']['me']['mobilityEvents']:
            try:
                if standplaats in trip['where']['from']['humanized'] or standplaats in trip['where']['to']['humanized']:
                    date_is_dienstreis[trip['when']['startsAt'][0:10]] = False
            except KeyError:
                print(f"Trip {trip['id']} could not be used to determine the travel purpose")
                continue

        for trip in trips.json()['data']['me']['mobilityEvents']:
            if trip['status']['value'] == 'DRAFT':
                # Soms is er geen van en tot, maar alleen een tijdstip, bijvoorbeeld bij IC direct toeslag
                # In dat geval gebruiken we trip['when']['at']
                # Als het dan nog fout gaat is er stront aan de knikker
                trip_date = trip['when'].get('startsAt', trip['when'].get('at', ''))[0:10]  # [0:10] is yyyy-mm-dd
                if date_is_dienstreis[trip_date]:
                    travel_purpose = "BUSINESS"
                else:
                    travel_purpose = "COMMUTE"
                update_request = session.post(
                    "https://mijn.shuttelportal.nl/graphql?operationName=UpdateMobilityEvents",
                    json={'operationName': 'UpdateMobilityEvents', 'variables': {
                        'input': {'mobilityEventIds': [trip['id']], 'why': {'travelPurpose': travel_purpose},
                                  'what': {}}},
                          'query': 'mutation UpdateMobilityEvents($input: UpdateMobilityEventsInput!) {\n  updateMobilityEvents(input: $input) {\n    days {\n      ... on DayWithMobilityEvents {\n        date\n        eventsConfirmable\n        eventsAddable\n        mobilityEvents {\n          ...IndexMobilityEvent\n          __typename\n        }\n        permissions {\n          manageWorkFromHome\n          manageCommuteCompensation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    updatedMobilityEvents {\n      ...ShowFragment\n      __typename\n    }\n    result {\n      success\n      error\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment IndexMobilityEvent on MobilityEvent {\n  id\n  status {\n    value\n    humanized\n    label\n    __typename\n  }\n  employment {\n    budgetGroupName\n    commuteMonthlyKmBudget\n    commuteMonthlyMoneyBudget\n    costCenter\n    department\n    endsOn\n    id\n    main\n    startsOn\n    __typename\n  }\n  happenedAt\n  happenedInTheFuture\n  allowPersonalConsumption\n  actions {\n    editable\n    deletable\n    copyable\n    confirmable\n    unacceptable\n    mergeable\n    __typename\n  }\n  what {\n    editable\n    category {\n      main\n      requiresModality\n      __typename\n    }\n    modality {\n      id\n      clazz\n      kind\n      modalityOwnership {\n        humanized\n        value\n        __typename\n      }\n      requiresVehicle\n      __typename\n    }\n    humanized\n    icon {\n      name\n      __typename\n    }\n    sharedRidePassengers\n    __typename\n  }\n  how {\n    humanized\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  why {\n    travelPurpose {\n      humanized\n      value\n      __typename\n    }\n    project {\n      id\n      code\n      humanized\n      __typename\n    }\n    explanation {\n      humanized\n      required {\n        business\n        commute\n        personal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  howMuch {\n    consumption {\n      amount\n      humanized\n      __typename\n    }\n    __typename\n  }\n  where {\n    ... on Route {\n      from {\n        humanized\n        __typename\n      }\n      to {\n        humanized\n        __typename\n      }\n      __typename\n    }\n    ... on Location {\n      humanized\n      __typename\n    }\n    ... on RentalLocations {\n      pickup {\n        humanized\n        __typename\n      }\n      return {\n        humanized\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  financial {\n    consequences {\n      gross {\n        label\n        moneyTransfer {\n          direction\n          humanized\n          __typename\n        }\n        __typename\n      }\n      net {\n        label\n        moneyTransfer {\n          direction\n          humanized\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    fact {\n      receipt {\n        contentType\n        url\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ShowFragment on MobilityEvent {\n  id\n  happenedInTheFuture\n  status {\n    value\n    humanized\n    label\n    __typename\n  }\n  employment {\n    budgetGroupName\n    commuteMonthlyKmBudget\n    commuteMonthlyMoneyBudget\n    costCenter\n    department\n    endsOn\n    id\n    main\n    startsOn\n    __typename\n  }\n  happenedAt\n  allowPersonalConsumption\n  actions {\n    editable\n    deletable\n    copyable\n    confirmable\n    unacceptable\n    missingCheckout\n    mergeable\n    viewDetails\n    __typename\n  }\n  financial {\n    fact {\n      exclVat {\n        humanized\n        __typename\n      }\n      inclVat {\n        humanized\n        value\n        __typename\n      }\n      receipt {\n        filename\n        contentType\n        url\n        __typename\n      }\n      direction\n      label\n      vatRate {\n        humanized\n        __typename\n      }\n      __typename\n    }\n    consequences {\n      gross {\n        ...FinancialComponents\n        __typename\n      }\n      net {\n        ...FinancialComponents\n        __typename\n      }\n      fiscal {\n        ...FinancialComponents\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  howMuch {\n    consumption {\n      label\n      humanized\n      amount\n      __typename\n    }\n    co2Emission {\n      label\n      humanized\n      amount\n      __typename\n    }\n    __typename\n  }\n  what {\n    editable\n    humanized\n    modality {\n      id\n      humanizedWithCapital\n      requiresVehicle\n      travelMode\n      kind\n      modalityOwnership {\n        humanized\n        value\n        __typename\n      }\n      requiredPassengerCount\n      clazz\n      __typename\n    }\n    category {\n      id\n      main\n      requiresModality\n      mainCategory {\n        value\n        humanized\n        __typename\n      }\n      subCategory {\n        value\n        humanized\n        __typename\n      }\n      __typename\n    }\n    vehicle {\n      id\n      humanized\n      __typename\n    }\n    sharedRidePassengers\n    reimbursableCategoryMethod {\n      value\n      __typename\n    }\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  where {\n    ... on Route {\n      diverted {\n        label\n        humanized\n        value\n        __typename\n      }\n      nonCombined {\n        label\n        humanized\n        value\n        __typename\n      }\n      from {\n        humanized\n        favoriteId\n        locationId\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      to {\n        humanized\n        favoriteId\n        locationId\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      track {\n        longitude\n        latitude\n        __typename\n      }\n      __typename\n    }\n    ... on RentalLocations {\n      pickup {\n        humanized\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      return {\n        humanized\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on Location {\n      humanized\n      label\n      coordinates {\n        latitude\n        longitude\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  why {\n    editable\n    legs {\n      travelPurpose {\n        humanized\n        __typename\n      }\n      quantity {\n        amount\n        humanized\n        __typename\n      }\n      __typename\n    }\n    travelPurpose {\n      humanized\n      value\n      __typename\n    }\n    personalDistance\n    project {\n      id\n      code\n      humanized\n      __typename\n    }\n    explanation {\n      humanized\n      required {\n        business\n        commute\n        personal\n        __typename\n      }\n      __typename\n    }\n    stateTransitions {\n      rejectedAt\n      rejectReason\n      confirmer\n      __typename\n    }\n    refundedMobilityEventId\n    humanizedRefundedMobilityEvent\n    __typename\n  }\n  when {\n    ... on Timestamp {\n      at\n      editable\n      __typename\n    }\n    ... on Duration {\n      startsAt\n      endsAt\n      editable\n      __typename\n    }\n    __typename\n  }\n  how {\n    humanized\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  isRefund\n  signatures {\n    ...mobilityEventSignature\n    __typename\n  }\n  __typename\n}\n\nfragment FinancialComponents on FinancialComponent {\n  label\n  moneyTransfer {\n    humanized\n    direction\n    __typename\n  }\n  amount {\n    humanized\n    valueInCents\n    __typename\n  }\n  entries {\n    label\n    calculation\n    moneyTransfer {\n      direction\n      humanized\n      __typename\n    }\n    amount {\n      humanized\n      valueInCents\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment mobilityEventSignature on Signature {\n  createdAt\n  id\n  reason\n  signer {\n    profile {\n      email\n      employeeNumber\n      firstName\n      lastName\n      __typename\n    }\n    __typename\n  }\n  __typename\n}'})
                confirm_request = session.post(
                    "https://mijn.shuttelportal.nl/graphql?operationName=confirmSingleMobilityEvent",
                    json={'operationName': 'confirmSingleMobilityEvent', 'variables': {'id': trip['id']},
                          'query': 'mutation confirmSingleMobilityEvent($id: ID!) {\n  confirmMobilityEvent(input: {id: $id}) {\n    result {\n      error\n      success\n      __typename\n    }\n    mobilityEvent {\n      ...ShowFragment\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ShowFragment on MobilityEvent {\n  id\n  happenedInTheFuture\n  status {\n    value\n    humanized\n    label\n    __typename\n  }\n  employment {\n    budgetGroupName\n    commuteMonthlyKmBudget\n    commuteMonthlyMoneyBudget\n    costCenter\n    department\n    endsOn\n    id\n    main\n    startsOn\n    __typename\n  }\n  happenedAt\n  allowPersonalConsumption\n  actions {\n    editable\n    deletable\n    copyable\n    confirmable\n    unacceptable\n    missingCheckout\n    mergeable\n    viewDetails\n    __typename\n  }\n  financial {\n    fact {\n      exclVat {\n        humanized\n        __typename\n      }\n      inclVat {\n        humanized\n        value\n        __typename\n      }\n      receipt {\n        filename\n        contentType\n        url\n        __typename\n      }\n      direction\n      label\n      vatRate {\n        humanized\n        __typename\n      }\n      __typename\n    }\n    consequences {\n      gross {\n        ...FinancialComponents\n        __typename\n      }\n      net {\n        ...FinancialComponents\n        __typename\n      }\n      fiscal {\n        ...FinancialComponents\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  howMuch {\n    consumption {\n      label\n      humanized\n      amount\n      __typename\n    }\n    co2Emission {\n      label\n      humanized\n      amount\n      __typename\n    }\n    __typename\n  }\n  what {\n    editable\n    humanized\n    modality {\n      id\n      humanizedWithCapital\n      requiresVehicle\n      travelMode\n      kind\n      modalityOwnership {\n        humanized\n        value\n        __typename\n      }\n      requiredPassengerCount\n      clazz\n      __typename\n    }\n    category {\n      id\n      main\n      requiresModality\n      mainCategory {\n        value\n        humanized\n        __typename\n      }\n      subCategory {\n        value\n        humanized\n        __typename\n      }\n      __typename\n    }\n    vehicle {\n      id\n      humanized\n      __typename\n    }\n    sharedRidePassengers\n    reimbursableCategoryMethod {\n      value\n      __typename\n    }\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  where {\n    ... on Route {\n      diverted {\n        label\n        humanized\n        value\n        __typename\n      }\n      nonCombined {\n        label\n        humanized\n        value\n        __typename\n      }\n      from {\n        humanized\n        favoriteId\n        locationId\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      to {\n        humanized\n        favoriteId\n        locationId\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      track {\n        longitude\n        latitude\n        __typename\n      }\n      __typename\n    }\n    ... on RentalLocations {\n      pickup {\n        humanized\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      return {\n        humanized\n        coordinates {\n          latitude\n          longitude\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on Location {\n      humanized\n      label\n      coordinates {\n        latitude\n        longitude\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  why {\n    editable\n    legs {\n      travelPurpose {\n        humanized\n        __typename\n      }\n      quantity {\n        amount\n        humanized\n        __typename\n      }\n      __typename\n    }\n    travelPurpose {\n      humanized\n      value\n      __typename\n    }\n    personalDistance\n    project {\n      id\n      code\n      humanized\n      __typename\n    }\n    explanation {\n      humanized\n      required {\n        business\n        commute\n        personal\n        __typename\n      }\n      __typename\n    }\n    stateTransitions {\n      rejectedAt\n      rejectReason\n      confirmer\n      __typename\n    }\n    refundedMobilityEventId\n    humanizedRefundedMobilityEvent\n    __typename\n  }\n  when {\n    ... on Timestamp {\n      at\n      editable\n      __typename\n    }\n    ... on Duration {\n      startsAt\n      endsAt\n      editable\n      __typename\n    }\n    __typename\n  }\n  how {\n    humanized\n    icon {\n      name\n      __typename\n    }\n    __typename\n  }\n  isRefund\n  signatures {\n    ...mobilityEventSignature\n    __typename\n  }\n  __typename\n}\n\nfragment FinancialComponents on FinancialComponent {\n  label\n  moneyTransfer {\n    humanized\n    direction\n    __typename\n  }\n  amount {\n    humanized\n    valueInCents\n    __typename\n  }\n  entries {\n    label\n    calculation\n    moneyTransfer {\n      direction\n      humanized\n      __typename\n    }\n    amount {\n      humanized\n      valueInCents\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment mobilityEventSignature on Signature {\n  createdAt\n  id\n  reason\n  signer {\n    profile {\n      email\n      employeeNumber\n      firstName\n      lastName\n      __typename\n    }\n    __typename\n  }\n  __typename\n}'})
                print(f"Changed trip {trip['id']} to {travel_purpose} on {trip_date}")
